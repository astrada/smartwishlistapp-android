/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2015-08-03 17:34:38 UTC)
 * on 2015-08-10 at 21:16:54 UTC 
 * Modify at your own risk.
 */

package com.appspot.smart_wish_list.smartwishlist;

/**
 * Service definition for Smartwishlist (v1).
 *
 * <p>
 * Smart Wish List API v1.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link SmartwishlistRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Smartwishlist extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.20.0 of the smartwishlist library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://smart-wish-list.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "smartwishlist/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Smartwishlist(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Smartwishlist(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the AppNotifications collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Smartwishlist smartwishlist = new Smartwishlist(...);}
   *   {@code Smartwishlist.AppNotifications.List request = smartwishlist.appNotifications().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public AppNotifications appNotifications() {
    return new AppNotifications();
  }

  /**
   * The "appNotifications" collection of methods.
   */
  public class AppNotifications {

    /**
     * Create a request for the method "appNotifications.list".
     *
     * This request holds the parameters needed by the smartwishlist server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param clientId
     * @param timestamp
     * @param signature
     * @return the request
     */
    public List list(java.lang.String clientId, java.lang.Double timestamp, java.lang.String signature) throws java.io.IOException {
      List result = new List(clientId, timestamp, signature);
      initialize(result);
      return result;
    }

    public class List extends SmartwishlistRequest<com.appspot.smart_wish_list.smartwishlist.model.SmartWishListAppNotificationData> {

      private static final String REST_PATH = "getappnotifications/{clientId}";

      /**
       * Create a request for the method "appNotifications.list".
       *
       * This request holds the parameters needed by the the smartwishlist server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
       * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param clientId
       * @param timestamp
       * @param signature
       * @since 1.13
       */
      protected List(java.lang.String clientId, java.lang.Double timestamp, java.lang.String signature) {
        super(Smartwishlist.this, "POST", REST_PATH, null, com.appspot.smart_wish_list.smartwishlist.model.SmartWishListAppNotificationData.class);
        this.clientId = com.google.api.client.util.Preconditions.checkNotNull(clientId, "Required parameter clientId must be specified.");
        this.timestamp = com.google.api.client.util.Preconditions.checkNotNull(timestamp, "Required parameter timestamp must be specified.");
        this.signature = com.google.api.client.util.Preconditions.checkNotNull(signature, "Required parameter signature must be specified.");
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String clientId;

      /**

       */
      public java.lang.String getClientId() {
        return clientId;
      }

      public List setClientId(java.lang.String clientId) {
        this.clientId = clientId;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Double timestamp;

      /**

       */
      public java.lang.Double getTimestamp() {
        return timestamp;
      }

      public List setTimestamp(java.lang.Double timestamp) {
        this.timestamp = timestamp;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String signature;

      /**

       */
      public java.lang.String getSignature() {
        return signature;
      }

      public List setSignature(java.lang.String signature) {
        this.signature = signature;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Boolean isApp;

      /**

       */
      public java.lang.Boolean getIsApp() {
        return isApp;
      }

      public List setIsApp(java.lang.Boolean isApp) {
        this.isApp = isApp;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "appNotifications.register".
     *
     * This request holds the parameters needed by the smartwishlist server.  After setting any optional
     * parameters, call the {@link Register#execute()} method to invoke the remote operation.
     *
     * @param clientId
     * @param timestamp
     * @param signature
     * @param content the {@link com.appspot.smart_wish_list.smartwishlist.model.SmartWishListRegisterGcmDeviceParameters}
     * @return the request
     */
    public Register register(java.lang.String clientId, java.lang.Double timestamp, java.lang.String signature, com.appspot.smart_wish_list.smartwishlist.model.SmartWishListRegisterGcmDeviceParameters content) throws java.io.IOException {
      Register result = new Register(clientId, timestamp, signature, content);
      initialize(result);
      return result;
    }

    public class Register extends SmartwishlistRequest<Void> {

      private static final String REST_PATH = "registergcmdevice";

      /**
       * Create a request for the method "appNotifications.register".
       *
       * This request holds the parameters needed by the the smartwishlist server.  After setting any
       * optional parameters, call the {@link Register#execute()} method to invoke the remote operation.
       * <p> {@link
       * Register#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param clientId
       * @param timestamp
       * @param signature
       * @param content the {@link com.appspot.smart_wish_list.smartwishlist.model.SmartWishListRegisterGcmDeviceParameters}
       * @since 1.13
       */
      protected Register(java.lang.String clientId, java.lang.Double timestamp, java.lang.String signature, com.appspot.smart_wish_list.smartwishlist.model.SmartWishListRegisterGcmDeviceParameters content) {
        super(Smartwishlist.this, "POST", REST_PATH, content, Void.class);
        this.clientId = com.google.api.client.util.Preconditions.checkNotNull(clientId, "Required parameter clientId must be specified.");
        this.timestamp = com.google.api.client.util.Preconditions.checkNotNull(timestamp, "Required parameter timestamp must be specified.");
        this.signature = com.google.api.client.util.Preconditions.checkNotNull(signature, "Required parameter signature must be specified.");
      }

      @Override
      public Register setAlt(java.lang.String alt) {
        return (Register) super.setAlt(alt);
      }

      @Override
      public Register setFields(java.lang.String fields) {
        return (Register) super.setFields(fields);
      }

      @Override
      public Register setKey(java.lang.String key) {
        return (Register) super.setKey(key);
      }

      @Override
      public Register setOauthToken(java.lang.String oauthToken) {
        return (Register) super.setOauthToken(oauthToken);
      }

      @Override
      public Register setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Register) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Register setQuotaUser(java.lang.String quotaUser) {
        return (Register) super.setQuotaUser(quotaUser);
      }

      @Override
      public Register setUserIp(java.lang.String userIp) {
        return (Register) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String clientId;

      /**

       */
      public java.lang.String getClientId() {
        return clientId;
      }

      public Register setClientId(java.lang.String clientId) {
        this.clientId = clientId;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Double timestamp;

      /**

       */
      public java.lang.Double getTimestamp() {
        return timestamp;
      }

      public Register setTimestamp(java.lang.Double timestamp) {
        this.timestamp = timestamp;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String signature;

      /**

       */
      public java.lang.String getSignature() {
        return signature;
      }

      public Register setSignature(java.lang.String signature) {
        this.signature = signature;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Boolean isApp;

      /**

       */
      public java.lang.Boolean getIsApp() {
        return isApp;
      }

      public Register setIsApp(java.lang.Boolean isApp) {
        this.isApp = isApp;
        return this;
      }

      @Override
      public Register set(String parameterName, Object value) {
        return (Register) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Client collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Smartwishlist smartwishlist = new Smartwishlist(...);}
   *   {@code Smartwishlist.Client.List request = smartwishlist.client().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Client client() {
    return new Client();
  }

  /**
   * The "client" collection of methods.
   */
  public class Client {

    /**
     * Create a request for the method "client.checkId".
     *
     * This request holds the parameters needed by the smartwishlist server.  After setting any optional
     * parameters, call the {@link CheckId#execute()} method to invoke the remote operation.
     *
     * @param clientId
     * @return the request
     */
    public CheckId checkId(java.lang.String clientId) throws java.io.IOException {
      CheckId result = new CheckId(clientId);
      initialize(result);
      return result;
    }

    public class CheckId extends SmartwishlistRequest<com.appspot.smart_wish_list.smartwishlist.model.SmartWishListCheckResult> {

      private static final String REST_PATH = "checkclient/{clientId}";

      /**
       * Create a request for the method "client.checkId".
       *
       * This request holds the parameters needed by the the smartwishlist server.  After setting any
       * optional parameters, call the {@link CheckId#execute()} method to invoke the remote operation.
       * <p> {@link
       * CheckId#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param clientId
       * @since 1.13
       */
      protected CheckId(java.lang.String clientId) {
        super(Smartwishlist.this, "GET", REST_PATH, null, com.appspot.smart_wish_list.smartwishlist.model.SmartWishListCheckResult.class);
        this.clientId = com.google.api.client.util.Preconditions.checkNotNull(clientId, "Required parameter clientId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public CheckId setAlt(java.lang.String alt) {
        return (CheckId) super.setAlt(alt);
      }

      @Override
      public CheckId setFields(java.lang.String fields) {
        return (CheckId) super.setFields(fields);
      }

      @Override
      public CheckId setKey(java.lang.String key) {
        return (CheckId) super.setKey(key);
      }

      @Override
      public CheckId setOauthToken(java.lang.String oauthToken) {
        return (CheckId) super.setOauthToken(oauthToken);
      }

      @Override
      public CheckId setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (CheckId) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public CheckId setQuotaUser(java.lang.String quotaUser) {
        return (CheckId) super.setQuotaUser(quotaUser);
      }

      @Override
      public CheckId setUserIp(java.lang.String userIp) {
        return (CheckId) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String clientId;

      /**

       */
      public java.lang.String getClientId() {
        return clientId;
      }

      public CheckId setClientId(java.lang.String clientId) {
        this.clientId = clientId;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Boolean isApp;

      /**

       */
      public java.lang.Boolean getIsApp() {
        return isApp;
      }

      public CheckId setIsApp(java.lang.Boolean isApp) {
        this.isApp = isApp;
        return this;
      }

      @Override
      public CheckId set(String parameterName, Object value) {
        return (CheckId) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "client.register".
     *
     * This request holds the parameters needed by the smartwishlist server.  After setting any optional
     * parameters, call the {@link Register#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public Register register() throws java.io.IOException {
      Register result = new Register();
      initialize(result);
      return result;
    }

    public class Register extends SmartwishlistRequest<com.appspot.smart_wish_list.smartwishlist.model.SmartWishListClientData> {

      private static final String REST_PATH = "registerclient";

      /**
       * Create a request for the method "client.register".
       *
       * This request holds the parameters needed by the the smartwishlist server.  After setting any
       * optional parameters, call the {@link Register#execute()} method to invoke the remote operation.
       * <p> {@link
       * Register#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected Register() {
        super(Smartwishlist.this, "POST", REST_PATH, null, com.appspot.smart_wish_list.smartwishlist.model.SmartWishListClientData.class);
      }

      @Override
      public Register setAlt(java.lang.String alt) {
        return (Register) super.setAlt(alt);
      }

      @Override
      public Register setFields(java.lang.String fields) {
        return (Register) super.setFields(fields);
      }

      @Override
      public Register setKey(java.lang.String key) {
        return (Register) super.setKey(key);
      }

      @Override
      public Register setOauthToken(java.lang.String oauthToken) {
        return (Register) super.setOauthToken(oauthToken);
      }

      @Override
      public Register setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Register) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Register setQuotaUser(java.lang.String quotaUser) {
        return (Register) super.setQuotaUser(quotaUser);
      }

      @Override
      public Register setUserIp(java.lang.String userIp) {
        return (Register) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Boolean isApp;

      /**

       */
      public java.lang.Boolean getIsApp() {
        return isApp;
      }

      public Register setIsApp(java.lang.Boolean isApp) {
        this.isApp = isApp;
        return this;
      }

      @Override
      public Register set(String parameterName, Object value) {
        return (Register) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Feedback collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Smartwishlist smartwishlist = new Smartwishlist(...);}
   *   {@code Smartwishlist.Feedback.List request = smartwishlist.feedback().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Feedback feedback() {
    return new Feedback();
  }

  /**
   * The "feedback" collection of methods.
   */
  public class Feedback {

    /**
     * Create a request for the method "feedback.send".
     *
     * This request holds the parameters needed by the smartwishlist server.  After setting any optional
     * parameters, call the {@link Send#execute()} method to invoke the remote operation.
     *
     * @param clientId
     * @param timestamp
     * @param signature
     * @param content the {@link com.appspot.smart_wish_list.smartwishlist.model.SmartWishListFeedbackData}
     * @return the request
     */
    public Send send(java.lang.String clientId, java.lang.Double timestamp, java.lang.String signature, com.appspot.smart_wish_list.smartwishlist.model.SmartWishListFeedbackData content) throws java.io.IOException {
      Send result = new Send(clientId, timestamp, signature, content);
      initialize(result);
      return result;
    }

    public class Send extends SmartwishlistRequest<Void> {

      private static final String REST_PATH = "sendfeedback";

      /**
       * Create a request for the method "feedback.send".
       *
       * This request holds the parameters needed by the the smartwishlist server.  After setting any
       * optional parameters, call the {@link Send#execute()} method to invoke the remote operation. <p>
       * {@link Send#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param clientId
       * @param timestamp
       * @param signature
       * @param content the {@link com.appspot.smart_wish_list.smartwishlist.model.SmartWishListFeedbackData}
       * @since 1.13
       */
      protected Send(java.lang.String clientId, java.lang.Double timestamp, java.lang.String signature, com.appspot.smart_wish_list.smartwishlist.model.SmartWishListFeedbackData content) {
        super(Smartwishlist.this, "POST", REST_PATH, content, Void.class);
        this.clientId = com.google.api.client.util.Preconditions.checkNotNull(clientId, "Required parameter clientId must be specified.");
        this.timestamp = com.google.api.client.util.Preconditions.checkNotNull(timestamp, "Required parameter timestamp must be specified.");
        this.signature = com.google.api.client.util.Preconditions.checkNotNull(signature, "Required parameter signature must be specified.");
      }

      @Override
      public Send setAlt(java.lang.String alt) {
        return (Send) super.setAlt(alt);
      }

      @Override
      public Send setFields(java.lang.String fields) {
        return (Send) super.setFields(fields);
      }

      @Override
      public Send setKey(java.lang.String key) {
        return (Send) super.setKey(key);
      }

      @Override
      public Send setOauthToken(java.lang.String oauthToken) {
        return (Send) super.setOauthToken(oauthToken);
      }

      @Override
      public Send setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Send) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Send setQuotaUser(java.lang.String quotaUser) {
        return (Send) super.setQuotaUser(quotaUser);
      }

      @Override
      public Send setUserIp(java.lang.String userIp) {
        return (Send) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String clientId;

      /**

       */
      public java.lang.String getClientId() {
        return clientId;
      }

      public Send setClientId(java.lang.String clientId) {
        this.clientId = clientId;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Double timestamp;

      /**

       */
      public java.lang.Double getTimestamp() {
        return timestamp;
      }

      public Send setTimestamp(java.lang.Double timestamp) {
        this.timestamp = timestamp;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String signature;

      /**

       */
      public java.lang.String getSignature() {
        return signature;
      }

      public Send setSignature(java.lang.String signature) {
        this.signature = signature;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Boolean isApp;

      /**

       */
      public java.lang.Boolean getIsApp() {
        return isApp;
      }

      public Send setIsApp(java.lang.Boolean isApp) {
        this.isApp = isApp;
        return this;
      }

      @Override
      public Send set(String parameterName, Object value) {
        return (Send) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Items collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Smartwishlist smartwishlist = new Smartwishlist(...);}
   *   {@code Smartwishlist.Items.List request = smartwishlist.items().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Items items() {
    return new Items();
  }

  /**
   * The "items" collection of methods.
   */
  public class Items {

    /**
     * Create a request for the method "items.save".
     *
     * This request holds the parameters needed by the smartwishlist server.  After setting any optional
     * parameters, call the {@link Save#execute()} method to invoke the remote operation.
     *
     * @param clientId
     * @param timestamp
     * @param signature
     * @param content the {@link com.appspot.smart_wish_list.smartwishlist.model.SmartWishListNotificationTriggerData}
     * @return the request
     */
    public Save save(java.lang.String clientId, java.lang.Double timestamp, java.lang.String signature, com.appspot.smart_wish_list.smartwishlist.model.SmartWishListNotificationTriggerData content) throws java.io.IOException {
      Save result = new Save(clientId, timestamp, signature, content);
      initialize(result);
      return result;
    }

    public class Save extends SmartwishlistRequest<com.appspot.smart_wish_list.smartwishlist.model.SmartWishListCheckResult> {

      private static final String REST_PATH = "saveitem";

      /**
       * Create a request for the method "items.save".
       *
       * This request holds the parameters needed by the the smartwishlist server.  After setting any
       * optional parameters, call the {@link Save#execute()} method to invoke the remote operation. <p>
       * {@link Save#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param clientId
       * @param timestamp
       * @param signature
       * @param content the {@link com.appspot.smart_wish_list.smartwishlist.model.SmartWishListNotificationTriggerData}
       * @since 1.13
       */
      protected Save(java.lang.String clientId, java.lang.Double timestamp, java.lang.String signature, com.appspot.smart_wish_list.smartwishlist.model.SmartWishListNotificationTriggerData content) {
        super(Smartwishlist.this, "POST", REST_PATH, content, com.appspot.smart_wish_list.smartwishlist.model.SmartWishListCheckResult.class);
        this.clientId = com.google.api.client.util.Preconditions.checkNotNull(clientId, "Required parameter clientId must be specified.");
        this.timestamp = com.google.api.client.util.Preconditions.checkNotNull(timestamp, "Required parameter timestamp must be specified.");
        this.signature = com.google.api.client.util.Preconditions.checkNotNull(signature, "Required parameter signature must be specified.");
      }

      @Override
      public Save setAlt(java.lang.String alt) {
        return (Save) super.setAlt(alt);
      }

      @Override
      public Save setFields(java.lang.String fields) {
        return (Save) super.setFields(fields);
      }

      @Override
      public Save setKey(java.lang.String key) {
        return (Save) super.setKey(key);
      }

      @Override
      public Save setOauthToken(java.lang.String oauthToken) {
        return (Save) super.setOauthToken(oauthToken);
      }

      @Override
      public Save setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Save) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Save setQuotaUser(java.lang.String quotaUser) {
        return (Save) super.setQuotaUser(quotaUser);
      }

      @Override
      public Save setUserIp(java.lang.String userIp) {
        return (Save) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String clientId;

      /**

       */
      public java.lang.String getClientId() {
        return clientId;
      }

      public Save setClientId(java.lang.String clientId) {
        this.clientId = clientId;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Double timestamp;

      /**

       */
      public java.lang.Double getTimestamp() {
        return timestamp;
      }

      public Save setTimestamp(java.lang.Double timestamp) {
        this.timestamp = timestamp;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String signature;

      /**

       */
      public java.lang.String getSignature() {
        return signature;
      }

      public Save setSignature(java.lang.String signature) {
        this.signature = signature;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Boolean isApp;

      /**

       */
      public java.lang.Boolean getIsApp() {
        return isApp;
      }

      public Save setIsApp(java.lang.Boolean isApp) {
        this.isApp = isApp;
        return this;
      }

      @Override
      public Save set(String parameterName, Object value) {
        return (Save) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Products collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Smartwishlist smartwishlist = new Smartwishlist(...);}
   *   {@code Smartwishlist.Products.List request = smartwishlist.products().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Products products() {
    return new Products();
  }

  /**
   * The "products" collection of methods.
   */
  public class Products {

    /**
     * Create a request for the method "products.search".
     *
     * This request holds the parameters needed by the smartwishlist server.  After setting any optional
     * parameters, call the {@link Search#execute()} method to invoke the remote operation.
     *
     * @param clientId
     * @param timestamp
     * @param signature
     * @param content the {@link com.appspot.smart_wish_list.smartwishlist.model.SmartWishListSearchParameters}
     * @return the request
     */
    public Search search(java.lang.String clientId, java.lang.Double timestamp, java.lang.String signature, com.appspot.smart_wish_list.smartwishlist.model.SmartWishListSearchParameters content) throws java.io.IOException {
      Search result = new Search(clientId, timestamp, signature, content);
      initialize(result);
      return result;
    }

    public class Search extends SmartwishlistRequest<com.appspot.smart_wish_list.smartwishlist.model.SmartWishListSearchResultData> {

      private static final String REST_PATH = "searchproducts/{clientId}";

      /**
       * Create a request for the method "products.search".
       *
       * This request holds the parameters needed by the the smartwishlist server.  After setting any
       * optional parameters, call the {@link Search#execute()} method to invoke the remote operation.
       * <p> {@link
       * Search#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param clientId
       * @param timestamp
       * @param signature
       * @param content the {@link com.appspot.smart_wish_list.smartwishlist.model.SmartWishListSearchParameters}
       * @since 1.13
       */
      protected Search(java.lang.String clientId, java.lang.Double timestamp, java.lang.String signature, com.appspot.smart_wish_list.smartwishlist.model.SmartWishListSearchParameters content) {
        super(Smartwishlist.this, "POST", REST_PATH, content, com.appspot.smart_wish_list.smartwishlist.model.SmartWishListSearchResultData.class);
        this.clientId = com.google.api.client.util.Preconditions.checkNotNull(clientId, "Required parameter clientId must be specified.");
        this.timestamp = com.google.api.client.util.Preconditions.checkNotNull(timestamp, "Required parameter timestamp must be specified.");
        this.signature = com.google.api.client.util.Preconditions.checkNotNull(signature, "Required parameter signature must be specified.");
      }

      @Override
      public Search setAlt(java.lang.String alt) {
        return (Search) super.setAlt(alt);
      }

      @Override
      public Search setFields(java.lang.String fields) {
        return (Search) super.setFields(fields);
      }

      @Override
      public Search setKey(java.lang.String key) {
        return (Search) super.setKey(key);
      }

      @Override
      public Search setOauthToken(java.lang.String oauthToken) {
        return (Search) super.setOauthToken(oauthToken);
      }

      @Override
      public Search setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Search) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Search setQuotaUser(java.lang.String quotaUser) {
        return (Search) super.setQuotaUser(quotaUser);
      }

      @Override
      public Search setUserIp(java.lang.String userIp) {
        return (Search) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String clientId;

      /**

       */
      public java.lang.String getClientId() {
        return clientId;
      }

      public Search setClientId(java.lang.String clientId) {
        this.clientId = clientId;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Double timestamp;

      /**

       */
      public java.lang.Double getTimestamp() {
        return timestamp;
      }

      public Search setTimestamp(java.lang.Double timestamp) {
        this.timestamp = timestamp;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String signature;

      /**

       */
      public java.lang.String getSignature() {
        return signature;
      }

      public Search setSignature(java.lang.String signature) {
        this.signature = signature;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Boolean isApp;

      /**

       */
      public java.lang.Boolean getIsApp() {
        return isApp;
      }

      public Search setIsApp(java.lang.Boolean isApp) {
        this.isApp = isApp;
        return this;
      }

      @Override
      public Search set(String parameterName, Object value) {
        return (Search) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Triggers collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Smartwishlist smartwishlist = new Smartwishlist(...);}
   *   {@code Smartwishlist.Triggers.List request = smartwishlist.triggers().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Triggers triggers() {
    return new Triggers();
  }

  /**
   * The "triggers" collection of methods.
   */
  public class Triggers {

    /**
     * Create a request for the method "triggers.delete".
     *
     * This request holds the parameters needed by the smartwishlist server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param clientId
     * @param timestamp
     * @param signature
     * @param content the {@link com.appspot.smart_wish_list.smartwishlist.model.SmartWishListNotificationTriggerData}
     * @return the request
     */
    public Delete delete(java.lang.String clientId, java.lang.Double timestamp, java.lang.String signature, com.appspot.smart_wish_list.smartwishlist.model.SmartWishListNotificationTriggerData content) throws java.io.IOException {
      Delete result = new Delete(clientId, timestamp, signature, content);
      initialize(result);
      return result;
    }

    public class Delete extends SmartwishlistRequest<Void> {

      private static final String REST_PATH = "deletetrigger";

      /**
       * Create a request for the method "triggers.delete".
       *
       * This request holds the parameters needed by the the smartwishlist server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       * <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param clientId
       * @param timestamp
       * @param signature
       * @param content the {@link com.appspot.smart_wish_list.smartwishlist.model.SmartWishListNotificationTriggerData}
       * @since 1.13
       */
      protected Delete(java.lang.String clientId, java.lang.Double timestamp, java.lang.String signature, com.appspot.smart_wish_list.smartwishlist.model.SmartWishListNotificationTriggerData content) {
        super(Smartwishlist.this, "POST", REST_PATH, content, Void.class);
        this.clientId = com.google.api.client.util.Preconditions.checkNotNull(clientId, "Required parameter clientId must be specified.");
        this.timestamp = com.google.api.client.util.Preconditions.checkNotNull(timestamp, "Required parameter timestamp must be specified.");
        this.signature = com.google.api.client.util.Preconditions.checkNotNull(signature, "Required parameter signature must be specified.");
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String clientId;

      /**

       */
      public java.lang.String getClientId() {
        return clientId;
      }

      public Delete setClientId(java.lang.String clientId) {
        this.clientId = clientId;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Double timestamp;

      /**

       */
      public java.lang.Double getTimestamp() {
        return timestamp;
      }

      public Delete setTimestamp(java.lang.Double timestamp) {
        this.timestamp = timestamp;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String signature;

      /**

       */
      public java.lang.String getSignature() {
        return signature;
      }

      public Delete setSignature(java.lang.String signature) {
        this.signature = signature;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Boolean isApp;

      /**

       */
      public java.lang.Boolean getIsApp() {
        return isApp;
      }

      public Delete setIsApp(java.lang.Boolean isApp) {
        this.isApp = isApp;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "triggers.update".
     *
     * This request holds the parameters needed by the smartwishlist server.  After setting any optional
     * parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param clientId
     * @param timestamp
     * @param signature
     * @param content the {@link com.appspot.smart_wish_list.smartwishlist.model.SmartWishListNotificationTriggerData}
     * @return the request
     */
    public Update update(java.lang.String clientId, java.lang.Double timestamp, java.lang.String signature, com.appspot.smart_wish_list.smartwishlist.model.SmartWishListNotificationTriggerData content) throws java.io.IOException {
      Update result = new Update(clientId, timestamp, signature, content);
      initialize(result);
      return result;
    }

    public class Update extends SmartwishlistRequest<Void> {

      private static final String REST_PATH = "updatetrigger";

      /**
       * Create a request for the method "triggers.update".
       *
       * This request holds the parameters needed by the the smartwishlist server.  After setting any
       * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
       * <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param clientId
       * @param timestamp
       * @param signature
       * @param content the {@link com.appspot.smart_wish_list.smartwishlist.model.SmartWishListNotificationTriggerData}
       * @since 1.13
       */
      protected Update(java.lang.String clientId, java.lang.Double timestamp, java.lang.String signature, com.appspot.smart_wish_list.smartwishlist.model.SmartWishListNotificationTriggerData content) {
        super(Smartwishlist.this, "POST", REST_PATH, content, Void.class);
        this.clientId = com.google.api.client.util.Preconditions.checkNotNull(clientId, "Required parameter clientId must be specified.");
        this.timestamp = com.google.api.client.util.Preconditions.checkNotNull(timestamp, "Required parameter timestamp must be specified.");
        this.signature = com.google.api.client.util.Preconditions.checkNotNull(signature, "Required parameter signature must be specified.");
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setFields(java.lang.String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(java.lang.String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(java.lang.String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUserIp(java.lang.String userIp) {
        return (Update) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String clientId;

      /**

       */
      public java.lang.String getClientId() {
        return clientId;
      }

      public Update setClientId(java.lang.String clientId) {
        this.clientId = clientId;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Double timestamp;

      /**

       */
      public java.lang.Double getTimestamp() {
        return timestamp;
      }

      public Update setTimestamp(java.lang.Double timestamp) {
        this.timestamp = timestamp;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String signature;

      /**

       */
      public java.lang.String getSignature() {
        return signature;
      }

      public Update setSignature(java.lang.String signature) {
        this.signature = signature;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Boolean isApp;

      /**

       */
      public java.lang.Boolean getIsApp() {
        return isApp;
      }

      public Update setIsApp(java.lang.Boolean isApp) {
        this.isApp = isApp;
        return this;
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Users collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Smartwishlist smartwishlist = new Smartwishlist(...);}
   *   {@code Smartwishlist.Users.List request = smartwishlist.users().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Users users() {
    return new Users();
  }

  /**
   * The "users" collection of methods.
   */
  public class Users {

    /**
     * Create a request for the method "users.delete".
     *
     * This request holds the parameters needed by the smartwishlist server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param clientId
     * @param timestamp
     * @param signature
     * @return the request
     */
    public Delete delete(java.lang.String clientId, java.lang.Double timestamp, java.lang.String signature) throws java.io.IOException {
      Delete result = new Delete(clientId, timestamp, signature);
      initialize(result);
      return result;
    }

    public class Delete extends SmartwishlistRequest<Void> {

      private static final String REST_PATH = "deleteuser";

      /**
       * Create a request for the method "users.delete".
       *
       * This request holds the parameters needed by the the smartwishlist server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       * <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param clientId
       * @param timestamp
       * @param signature
       * @since 1.13
       */
      protected Delete(java.lang.String clientId, java.lang.Double timestamp, java.lang.String signature) {
        super(Smartwishlist.this, "POST", REST_PATH, null, Void.class);
        this.clientId = com.google.api.client.util.Preconditions.checkNotNull(clientId, "Required parameter clientId must be specified.");
        this.timestamp = com.google.api.client.util.Preconditions.checkNotNull(timestamp, "Required parameter timestamp must be specified.");
        this.signature = com.google.api.client.util.Preconditions.checkNotNull(signature, "Required parameter signature must be specified.");
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String clientId;

      /**

       */
      public java.lang.String getClientId() {
        return clientId;
      }

      public Delete setClientId(java.lang.String clientId) {
        this.clientId = clientId;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Double timestamp;

      /**

       */
      public java.lang.Double getTimestamp() {
        return timestamp;
      }

      public Delete setTimestamp(java.lang.Double timestamp) {
        this.timestamp = timestamp;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String signature;

      /**

       */
      public java.lang.String getSignature() {
        return signature;
      }

      public Delete setSignature(java.lang.String signature) {
        this.signature = signature;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Boolean isApp;

      /**

       */
      public java.lang.Boolean getIsApp() {
        return isApp;
      }

      public Delete setIsApp(java.lang.Boolean isApp) {
        this.isApp = isApp;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "users.login".
     *
     * This request holds the parameters needed by the smartwishlist server.  After setting any optional
     * parameters, call the {@link Login#execute()} method to invoke the remote operation.
     *
     * @param clientId
     * @param timestamp
     * @param signature
     * @param content the {@link com.appspot.smart_wish_list.smartwishlist.model.SmartWishListUserData}
     * @return the request
     */
    public Login login(java.lang.String clientId, java.lang.Double timestamp, java.lang.String signature, com.appspot.smart_wish_list.smartwishlist.model.SmartWishListUserData content) throws java.io.IOException {
      Login result = new Login(clientId, timestamp, signature, content);
      initialize(result);
      return result;
    }

    public class Login extends SmartwishlistRequest<com.appspot.smart_wish_list.smartwishlist.model.SmartWishListLoginResult> {

      private static final String REST_PATH = "login";

      /**
       * Create a request for the method "users.login".
       *
       * This request holds the parameters needed by the the smartwishlist server.  After setting any
       * optional parameters, call the {@link Login#execute()} method to invoke the remote operation.
       * <p> {@link
       * Login#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param clientId
       * @param timestamp
       * @param signature
       * @param content the {@link com.appspot.smart_wish_list.smartwishlist.model.SmartWishListUserData}
       * @since 1.13
       */
      protected Login(java.lang.String clientId, java.lang.Double timestamp, java.lang.String signature, com.appspot.smart_wish_list.smartwishlist.model.SmartWishListUserData content) {
        super(Smartwishlist.this, "POST", REST_PATH, content, com.appspot.smart_wish_list.smartwishlist.model.SmartWishListLoginResult.class);
        this.clientId = com.google.api.client.util.Preconditions.checkNotNull(clientId, "Required parameter clientId must be specified.");
        this.timestamp = com.google.api.client.util.Preconditions.checkNotNull(timestamp, "Required parameter timestamp must be specified.");
        this.signature = com.google.api.client.util.Preconditions.checkNotNull(signature, "Required parameter signature must be specified.");
      }

      @Override
      public Login setAlt(java.lang.String alt) {
        return (Login) super.setAlt(alt);
      }

      @Override
      public Login setFields(java.lang.String fields) {
        return (Login) super.setFields(fields);
      }

      @Override
      public Login setKey(java.lang.String key) {
        return (Login) super.setKey(key);
      }

      @Override
      public Login setOauthToken(java.lang.String oauthToken) {
        return (Login) super.setOauthToken(oauthToken);
      }

      @Override
      public Login setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Login) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Login setQuotaUser(java.lang.String quotaUser) {
        return (Login) super.setQuotaUser(quotaUser);
      }

      @Override
      public Login setUserIp(java.lang.String userIp) {
        return (Login) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String clientId;

      /**

       */
      public java.lang.String getClientId() {
        return clientId;
      }

      public Login setClientId(java.lang.String clientId) {
        this.clientId = clientId;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Double timestamp;

      /**

       */
      public java.lang.Double getTimestamp() {
        return timestamp;
      }

      public Login setTimestamp(java.lang.Double timestamp) {
        this.timestamp = timestamp;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String signature;

      /**

       */
      public java.lang.String getSignature() {
        return signature;
      }

      public Login setSignature(java.lang.String signature) {
        this.signature = signature;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Boolean isApp;

      /**

       */
      public java.lang.Boolean getIsApp() {
        return isApp;
      }

      public Login setIsApp(java.lang.Boolean isApp) {
        this.isApp = isApp;
        return this;
      }

      @Override
      public Login set(String parameterName, Object value) {
        return (Login) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "users.requestPasswordReset".
     *
     * This request holds the parameters needed by the smartwishlist server.  After setting any optional
     * parameters, call the {@link RequestPasswordReset#execute()} method to invoke the remote
     * operation.
     *
     * @param clientId
     * @param timestamp
     * @param signature
     * @param content the {@link com.appspot.smart_wish_list.smartwishlist.model.SmartWishListUserData}
     * @return the request
     */
    public RequestPasswordReset requestPasswordReset(java.lang.String clientId, java.lang.Double timestamp, java.lang.String signature, com.appspot.smart_wish_list.smartwishlist.model.SmartWishListUserData content) throws java.io.IOException {
      RequestPasswordReset result = new RequestPasswordReset(clientId, timestamp, signature, content);
      initialize(result);
      return result;
    }

    public class RequestPasswordReset extends SmartwishlistRequest<com.appspot.smart_wish_list.smartwishlist.model.SmartWishListCheckResult> {

      private static final String REST_PATH = "requestpasswordreset";

      /**
       * Create a request for the method "users.requestPasswordReset".
       *
       * This request holds the parameters needed by the the smartwishlist server.  After setting any
       * optional parameters, call the {@link RequestPasswordReset#execute()} method to invoke the
       * remote operation. <p> {@link RequestPasswordReset#initialize(com.google.api.client.googleapis.s
       * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
       * after invoking the constructor. </p>
       *
       * @param clientId
       * @param timestamp
       * @param signature
       * @param content the {@link com.appspot.smart_wish_list.smartwishlist.model.SmartWishListUserData}
       * @since 1.13
       */
      protected RequestPasswordReset(java.lang.String clientId, java.lang.Double timestamp, java.lang.String signature, com.appspot.smart_wish_list.smartwishlist.model.SmartWishListUserData content) {
        super(Smartwishlist.this, "POST", REST_PATH, content, com.appspot.smart_wish_list.smartwishlist.model.SmartWishListCheckResult.class);
        this.clientId = com.google.api.client.util.Preconditions.checkNotNull(clientId, "Required parameter clientId must be specified.");
        this.timestamp = com.google.api.client.util.Preconditions.checkNotNull(timestamp, "Required parameter timestamp must be specified.");
        this.signature = com.google.api.client.util.Preconditions.checkNotNull(signature, "Required parameter signature must be specified.");
      }

      @Override
      public RequestPasswordReset setAlt(java.lang.String alt) {
        return (RequestPasswordReset) super.setAlt(alt);
      }

      @Override
      public RequestPasswordReset setFields(java.lang.String fields) {
        return (RequestPasswordReset) super.setFields(fields);
      }

      @Override
      public RequestPasswordReset setKey(java.lang.String key) {
        return (RequestPasswordReset) super.setKey(key);
      }

      @Override
      public RequestPasswordReset setOauthToken(java.lang.String oauthToken) {
        return (RequestPasswordReset) super.setOauthToken(oauthToken);
      }

      @Override
      public RequestPasswordReset setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (RequestPasswordReset) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public RequestPasswordReset setQuotaUser(java.lang.String quotaUser) {
        return (RequestPasswordReset) super.setQuotaUser(quotaUser);
      }

      @Override
      public RequestPasswordReset setUserIp(java.lang.String userIp) {
        return (RequestPasswordReset) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String clientId;

      /**

       */
      public java.lang.String getClientId() {
        return clientId;
      }

      public RequestPasswordReset setClientId(java.lang.String clientId) {
        this.clientId = clientId;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Double timestamp;

      /**

       */
      public java.lang.Double getTimestamp() {
        return timestamp;
      }

      public RequestPasswordReset setTimestamp(java.lang.Double timestamp) {
        this.timestamp = timestamp;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String signature;

      /**

       */
      public java.lang.String getSignature() {
        return signature;
      }

      public RequestPasswordReset setSignature(java.lang.String signature) {
        this.signature = signature;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Boolean isApp;

      /**

       */
      public java.lang.Boolean getIsApp() {
        return isApp;
      }

      public RequestPasswordReset setIsApp(java.lang.Boolean isApp) {
        this.isApp = isApp;
        return this;
      }

      @Override
      public RequestPasswordReset set(String parameterName, Object value) {
        return (RequestPasswordReset) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "users.save".
     *
     * This request holds the parameters needed by the smartwishlist server.  After setting any optional
     * parameters, call the {@link Save#execute()} method to invoke the remote operation.
     *
     * @param clientId
     * @param timestamp
     * @param signature
     * @param content the {@link com.appspot.smart_wish_list.smartwishlist.model.SmartWishListUserData}
     * @return the request
     */
    public Save save(java.lang.String clientId, java.lang.Double timestamp, java.lang.String signature, com.appspot.smart_wish_list.smartwishlist.model.SmartWishListUserData content) throws java.io.IOException {
      Save result = new Save(clientId, timestamp, signature, content);
      initialize(result);
      return result;
    }

    public class Save extends SmartwishlistRequest<com.appspot.smart_wish_list.smartwishlist.model.SmartWishListCheckResult> {

      private static final String REST_PATH = "saveuser";

      /**
       * Create a request for the method "users.save".
       *
       * This request holds the parameters needed by the the smartwishlist server.  After setting any
       * optional parameters, call the {@link Save#execute()} method to invoke the remote operation. <p>
       * {@link Save#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param clientId
       * @param timestamp
       * @param signature
       * @param content the {@link com.appspot.smart_wish_list.smartwishlist.model.SmartWishListUserData}
       * @since 1.13
       */
      protected Save(java.lang.String clientId, java.lang.Double timestamp, java.lang.String signature, com.appspot.smart_wish_list.smartwishlist.model.SmartWishListUserData content) {
        super(Smartwishlist.this, "POST", REST_PATH, content, com.appspot.smart_wish_list.smartwishlist.model.SmartWishListCheckResult.class);
        this.clientId = com.google.api.client.util.Preconditions.checkNotNull(clientId, "Required parameter clientId must be specified.");
        this.timestamp = com.google.api.client.util.Preconditions.checkNotNull(timestamp, "Required parameter timestamp must be specified.");
        this.signature = com.google.api.client.util.Preconditions.checkNotNull(signature, "Required parameter signature must be specified.");
      }

      @Override
      public Save setAlt(java.lang.String alt) {
        return (Save) super.setAlt(alt);
      }

      @Override
      public Save setFields(java.lang.String fields) {
        return (Save) super.setFields(fields);
      }

      @Override
      public Save setKey(java.lang.String key) {
        return (Save) super.setKey(key);
      }

      @Override
      public Save setOauthToken(java.lang.String oauthToken) {
        return (Save) super.setOauthToken(oauthToken);
      }

      @Override
      public Save setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Save) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Save setQuotaUser(java.lang.String quotaUser) {
        return (Save) super.setQuotaUser(quotaUser);
      }

      @Override
      public Save setUserIp(java.lang.String userIp) {
        return (Save) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String clientId;

      /**

       */
      public java.lang.String getClientId() {
        return clientId;
      }

      public Save setClientId(java.lang.String clientId) {
        this.clientId = clientId;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Double timestamp;

      /**

       */
      public java.lang.Double getTimestamp() {
        return timestamp;
      }

      public Save setTimestamp(java.lang.Double timestamp) {
        this.timestamp = timestamp;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String signature;

      /**

       */
      public java.lang.String getSignature() {
        return signature;
      }

      public Save setSignature(java.lang.String signature) {
        this.signature = signature;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Boolean isApp;

      /**

       */
      public java.lang.Boolean getIsApp() {
        return isApp;
      }

      public Save setIsApp(java.lang.Boolean isApp) {
        this.isApp = isApp;
        return this;
      }

      @Override
      public Save set(String parameterName, Object value) {
        return (Save) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "users.sendConfirmationEmail".
     *
     * This request holds the parameters needed by the smartwishlist server.  After setting any optional
     * parameters, call the {@link SendConfirmationEmail#execute()} method to invoke the remote
     * operation.
     *
     * @param clientId
     * @return the request
     */
    public SendConfirmationEmail sendConfirmationEmail(java.lang.String clientId) throws java.io.IOException {
      SendConfirmationEmail result = new SendConfirmationEmail(clientId);
      initialize(result);
      return result;
    }

    public class SendConfirmationEmail extends SmartwishlistRequest<Void> {

      private static final String REST_PATH = "sendconfirmationemail";

      /**
       * Create a request for the method "users.sendConfirmationEmail".
       *
       * This request holds the parameters needed by the the smartwishlist server.  After setting any
       * optional parameters, call the {@link SendConfirmationEmail#execute()} method to invoke the
       * remote operation. <p> {@link SendConfirmationEmail#initialize(com.google.api.client.googleapis.
       * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
       * after invoking the constructor. </p>
       *
       * @param clientId
       * @since 1.13
       */
      protected SendConfirmationEmail(java.lang.String clientId) {
        super(Smartwishlist.this, "POST", REST_PATH, null, Void.class);
        this.clientId = com.google.api.client.util.Preconditions.checkNotNull(clientId, "Required parameter clientId must be specified.");
      }

      @Override
      public SendConfirmationEmail setAlt(java.lang.String alt) {
        return (SendConfirmationEmail) super.setAlt(alt);
      }

      @Override
      public SendConfirmationEmail setFields(java.lang.String fields) {
        return (SendConfirmationEmail) super.setFields(fields);
      }

      @Override
      public SendConfirmationEmail setKey(java.lang.String key) {
        return (SendConfirmationEmail) super.setKey(key);
      }

      @Override
      public SendConfirmationEmail setOauthToken(java.lang.String oauthToken) {
        return (SendConfirmationEmail) super.setOauthToken(oauthToken);
      }

      @Override
      public SendConfirmationEmail setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SendConfirmationEmail) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SendConfirmationEmail setQuotaUser(java.lang.String quotaUser) {
        return (SendConfirmationEmail) super.setQuotaUser(quotaUser);
      }

      @Override
      public SendConfirmationEmail setUserIp(java.lang.String userIp) {
        return (SendConfirmationEmail) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String clientId;

      /**

       */
      public java.lang.String getClientId() {
        return clientId;
      }

      public SendConfirmationEmail setClientId(java.lang.String clientId) {
        this.clientId = clientId;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Boolean isApp;

      /**

       */
      public java.lang.Boolean getIsApp() {
        return isApp;
      }

      public SendConfirmationEmail setIsApp(java.lang.Boolean isApp) {
        this.isApp = isApp;
        return this;
      }

      @Override
      public SendConfirmationEmail set(String parameterName, Object value) {
        return (SendConfirmationEmail) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Wishlist collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Smartwishlist smartwishlist = new Smartwishlist(...);}
   *   {@code Smartwishlist.Wishlist.List request = smartwishlist.wishlist().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Wishlist wishlist() {
    return new Wishlist();
  }

  /**
   * The "wishlist" collection of methods.
   */
  public class Wishlist {

    /**
     * Create a request for the method "wishlist.list".
     *
     * This request holds the parameters needed by the smartwishlist server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param clientId
     * @param timestamp
     * @param signature
     * @return the request
     */
    public List list(java.lang.String clientId, java.lang.Double timestamp, java.lang.String signature) throws java.io.IOException {
      List result = new List(clientId, timestamp, signature);
      initialize(result);
      return result;
    }

    public class List extends SmartwishlistRequest<com.appspot.smart_wish_list.smartwishlist.model.SmartWishListWishLists> {

      private static final String REST_PATH = "getwishlists/{clientId}";

      /**
       * Create a request for the method "wishlist.list".
       *
       * This request holds the parameters needed by the the smartwishlist server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
       * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param clientId
       * @param timestamp
       * @param signature
       * @since 1.13
       */
      protected List(java.lang.String clientId, java.lang.Double timestamp, java.lang.String signature) {
        super(Smartwishlist.this, "GET", REST_PATH, null, com.appspot.smart_wish_list.smartwishlist.model.SmartWishListWishLists.class);
        this.clientId = com.google.api.client.util.Preconditions.checkNotNull(clientId, "Required parameter clientId must be specified.");
        this.timestamp = com.google.api.client.util.Preconditions.checkNotNull(timestamp, "Required parameter timestamp must be specified.");
        this.signature = com.google.api.client.util.Preconditions.checkNotNull(signature, "Required parameter signature must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String clientId;

      /**

       */
      public java.lang.String getClientId() {
        return clientId;
      }

      public List setClientId(java.lang.String clientId) {
        this.clientId = clientId;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Double timestamp;

      /**

       */
      public java.lang.Double getTimestamp() {
        return timestamp;
      }

      public List setTimestamp(java.lang.Double timestamp) {
        this.timestamp = timestamp;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String signature;

      /**

       */
      public java.lang.String getSignature() {
        return signature;
      }

      public List setSignature(java.lang.String signature) {
        this.signature = signature;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Boolean isApp;

      /**

       */
      public java.lang.Boolean getIsApp() {
        return isApp;
      }

      public List setIsApp(java.lang.Boolean isApp) {
        this.isApp = isApp;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link Smartwishlist}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Smartwishlist}. */
    @Override
    public Smartwishlist build() {
      return new Smartwishlist(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link SmartwishlistRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setSmartwishlistRequestInitializer(
        SmartwishlistRequestInitializer smartwishlistRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(smartwishlistRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
